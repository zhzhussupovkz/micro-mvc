<?php

define(APP_PATH, dirname(__FILE__).'/../../../app');
require_once(APP_PATH.'/core/MVC/Controller.php');
require_once(APP_PATH.'/config/main.php');
require_once(APP_PATH.'/config/Config.php');
require_once(APP_PATH.'/core/MVC/Model.php');
require_once(APP_PATH.'/core/MVC/View.php');
require_once(APP_PATH.'/core/Lib/Load.php');

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-02 at 18:44:02.
 */
class ControllerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Controller
     */
    protected $controller;
    protected $class;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->controller = new Controller;
        $this->class = new ReflectionClass('Controller');
    }

    //using reflection for test protected methods
    protected function getMethod($name) {
        $method = $this->class->getMethod($name);
        $method->setAccessible(true);
        return $method;
    }

    //using reflection for test protected properties
    protected function getProperty($name) {
        $property = $this->class->getProperty($name);
        $property->setAccessible(true);
        return $property->getValue($this->controller);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testModel() {
        $this->assertClassHasAttribute('model', 'Controller');
    }

    public function testView() {
        $this->assertInstanceOf('View', $this->getProperty('view'));
    }

    public function testLoad() {
        $this->assertClassHasAttribute('load', 'Controller');
        $this->assertInstanceOf('Load', $this->controller->load);
    }

    /**
     * @covers Controller::setModel
     * @todo   Implement testSetModel().
     */
    public function testSetModel()
    {
        $model = new Model;
        $this->controller->setModel($model);
        $this->assertInstanceOf('Model', $this->getProperty('model'));
    }
}
